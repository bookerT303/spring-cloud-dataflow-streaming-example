server.port=8084

info.app.name=Source Server
info.app.description=Source Server - publish messages to the kafka for the spring-cloud-datafalow-streaming-example

logging.level.Root=INFO
schema.registry.url=http://localhost:8081

spring.application.name=source-app

spring.integration.poller.fixed-delay=1000
spring.kafka.bootstrap-servers=localhost:9093
spring.kafka.properties.schema.registry.url=${schema.registry.url}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

#spring.cloud.stream.bindings.output.destination=kafka-demo-processed
spring.cloud.stream.bindings.output.destination=kafka-demo
spring.cloud.stream.bindings.output.producer.use-native-encoding=true
#spring.cloud.stream.bindings.output.content-type: application/json
spring.cloud.stream.bindings.output.content-type=application/avro
#spring.cloud.stream.bindings.output.binder=kafka

spring.cloud.stream.kafka.binder.minPartitionCount=2
spring.cloud.stream.kafka.binder.autoAddPartitions=true
spring.cloud.stream.kafka.binder.configuration.schema.registry.url=${schema.registry.url=localhost:8081}
spring.cloud.stream.kafka.binder.configuration.comit.interval.ms=1000
spring.cloud.stream.kafka.binder.auto-create-topics=true

spring.security.user.name=admin
spring.security.user.password=secret
spring.security.user.roles=ACTUATOR

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
